(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{293:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h4",{attrs:{id:"利用-shell-在构建-run-npm-命令的时候传递不同参数解决频繁改动代码的问题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用-shell-在构建-run-npm-命令的时候传递不同参数解决频繁改动代码的问题"}},[s._v("#")]),s._v(" 利用 "),t("code",[s._v("shell")]),s._v(" 在构建 "),t("code",[s._v("run npm")]),s._v(" 命令的时候传递不同参数解决频繁改动代码的问题")]),s._v(" "),t("h2",{attrs:{id:"场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#场景"}},[s._v("#")]),s._v(" 场景")]),s._v(" "),t("p",[s._v("如果我们做移动端开发，有时候需要调试一些东西，例如我们会用 "),t("code",[s._v("vconsole")]),s._v("，我们可能会写这一段代码")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("NODE_ENV")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"production"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vconsole"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("但是有另一种情况，我们部署到测试环境了，我们依然需要打开调试，但是部署之后如果我们不设置环境变量，我们的环境依然是线上环境，也就是 "),t("code",[s._v("process.env.NODE_ENV")]),s._v(" 是 "),t("code",[s._v("production")]),s._v("。")]),s._v(" "),t("h2",{attrs:{id:"思路"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#思路"}},[s._v("#")]),s._v(" 思路")]),s._v(" "),t("p",[s._v("基于这个问题，我们可以在构建的时候去做一些处理：")]),s._v(" "),t("p",[s._v("执行 "),t("code",[s._v("shell")]),s._v(" 构建的时候我们为对应的构建命令传递参数，"),t("code",[s._v("shell")]),s._v(" 拿到这个参数之后，就可以把参数加到环境变量中，"),t("code",[s._v("node")]),s._v(" 便可以读取出来，从而在我们打包的时候，"),t("code",[s._v("node")]),s._v(" 从 "),t("code",[s._v("process.env")]),s._v(" 中读取这个值进行不同的逻辑处理。")]),s._v(" "),t("p",[s._v("如果我们的构建是通过 "),t("code",[s._v("shell")]),s._v(" 来编写的话，那会更加容易和好理解。\n假设我们的项目是 "),t("code",[s._v("vue")]),s._v("，并且根目录下构建脚本是这样子的目录：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("script \n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" dev"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("build"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh\n    "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v(" pro"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("build"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sh"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),t("p",[s._v("我们的 "),t("code",[s._v("package.json")]),s._v(" 里面会有 "),t("code",[s._v("dev")]),s._v(" 和 "),t("code",[s._v("pro")]),s._v(" 的 "),t("code",[s._v("build")]),s._v(" 命令。\n"),t("code",[s._v("package.json")]),s._v(" 里的命令假设如下：")]),s._v(" "),t("div",{staticClass:"language-json extra-class"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"script"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"dev:build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"env MODE=build vue-cli-server build"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"env MODE=build vue-cli-server build"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("我们最终还需要有 "),t("code",[s._v("web")]),s._v(" 来触发 "),t("code",[s._v("sh")]),s._v("，并且可以承载手动构建的时候传递不同的参数。")]),s._v(" "),t("p",[s._v("从上边的命令来看，本地打包和生产打包其实没有什么区别，分别是开发环境下的 "),t("code",[s._v("build")]),s._v(" 和生产环境下的 "),t("code",[s._v("build")]),s._v("，那我们部署测试环境的时候一般都使用的是 "),t("code",[s._v("npm run build")]),s._v("，而我们上线时候的打包命令也是这个。那我们怎么才能区分出来是什么环境呢？")]),s._v(" "),t("h2",{attrs:{id:"实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[s._v("#")]),s._v(" 实现")]),s._v(" "),t("p",[s._v("假设我们的 "),t("code",[s._v("shell")]),s._v(" 是这样写的")]),s._v(" "),t("div",{staticClass:"language-sh extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VCONSOLE_ENABLE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("VCONSOLE_ENABLE "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VCONSOLE_ENABLE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以在这里根据业务需要任意导出系统变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# export ENABLE_CDN=true ...")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run dev:build\n")])])]),t("p",[s._v("如果我们手动构建可以在 "),t("code",[s._v("web")]),s._v(" 端通过 "),t("code",[s._v("ci")]),s._v(" 把参数值分别传递不同的命令中，这样我们就可以在 "),t("code",[s._v("web")]),s._v(" 手动构建的时候为不同的环境构建传递不同的参数值，当我们执行 "),t("code",[s._v("sh script/dev.build.sh ${VCONSOLE_ENABLE}")]),s._v("，我们便会在 "),t("code",[s._v("sh")]),s._v(" 里获取到对应的变量"),t("code",[s._v("$1")]),s._v("，从而通过 "),t("code",[s._v("shell")]),s._v(" 条件导出环境变量，"),t("code",[s._v("1")]),s._v(" 开启，其他值关闭，并且默认应该关闭。")]),s._v(" "),t("p",[s._v("这个时候我们的 "),t("code",[s._v("node process")]),s._v(" 是可以读取到这个变量的，通过 "),t("code",[s._v("process.env.VCONSOLE_ENABLE === 'true'")]),s._v(" 便可以判断是否需要开启调试，从而在构建的时候执行要不要引入 "),t("code",[s._v("vconsole")]),s._v("。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("有一点需要注意，就是必须要用 webpack 提供的 define 插件来定义下数据，这样在框架层面才能使用")])]),s._v(" "),t("p",[s._v("最终我们 "),t("code",[s._v("main.js")]),s._v(" 的代码会变成：")]),s._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("process"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("env"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token constant"}},[s._v("VCONSOLE_ENABLE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"true"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"vconsole"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("res")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("res"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("default")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),t("p",[s._v("从而在构建的时候解决需不需要开启调试的功能而非每次修改代码~~")])])}),[],!1,null,null,null);t.default=e.exports}}]);